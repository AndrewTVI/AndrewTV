name: Update latest social posts

on:
  schedule:
    - cron: '*/30 * * * *'       # cada 30 minutos
  workflow_dispatch: {}           # ejecución manual

permissions:
  contents: write                 # necesario para commit

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch latest TikTok & Tweet via r.jina.ai (robusto)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data

          # --- TikTok: primer /video/ del usuario ---
          TIKTOK_PAGE_URL="https://r.jina.ai/http://www.tiktok.com/@andrewtvi"
          RAW_TT="$(curl -fsSL "$TIKTOK_PAGE_URL" || echo "")"
          TIKTOK="$(printf '%s' "$RAW_TT" \
            | grep -oE 'https://www\.tiktok\.com/@andrewtvi/video/[0-9]+' \
            | head -n1 || true)"

          # --- Twitter: soportar ABSOLUTO y RELATIVO desde Nitter ---
          NITTER_PAGE_URL="https://r.jina.ai/http://nitter.net/iandres_soto"
          RAW_TW="$(curl -fsSL "$NITTER_PAGE_URL" || echo "")"

          # 1) intenta absoluto (https://nitter.net/iandres_soto/status/123)
          TWEET=$(printf '%s' "$RAW_TW" \
            | grep -oE 'https://nitter\.net/iandres_soto/status/[0-9]+' \
            | head -n1 || true)

          # 2) si no hay, intenta relativo (/iandres_soto/status/123)
          if [ -z "${TWEET:-}" ]; then
            REL=$(printf '%s' "$RAW_TW" \
              | grep -oE '/iandres_soto/status/[0-9]+' \
              | head -n1 || true)
            if [ -n "$REL" ]; then
              TWEET="https://twitter.com${REL}"
            fi
          else
            # convertir nitter -> twitter
            TWEET="${TWEET/https:\/\/nitter.net\//https:\/\/twitter.com/}"
          fi

          echo "TIKTOK: $TIKTOK"
          echo "TWEET : $TWEET"

          # Generar JSON (aunque alguno venga vacío)
          TIKTOK_SAFE=${TIKTOK//\"/\\\"}
          TWEET_SAFE=${TWEET//\"/\\\"}
          printf '{ "tiktok": "%s", "tweet": "%s" }\n' "$TIKTOK_SAFE" "$TWEET_SAFE" > data/latest.json

          echo "latest.json:"
          cat data/latest.json

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update latest.json"
          file_pattern: data/latest.json
