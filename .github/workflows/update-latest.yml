name: Update latest social posts

on:
  schedule:
    - cron: '*/30 * * * *'       # cada 30 minutos
  workflow_dispatch: {}           # ejecución manual

permissions:
  contents: write                 # necesario para commit

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch latest TikTok & Tweet via r.jina.ai (robusto + X/Twitter)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data

          #### TikTok: primer /video/ del usuario
          RAW_TT="$(curl -fsSL 'https://r.jina.ai/http://www.tiktok.com/@andrewtvi' || echo '')"
          TIKTOK="$(printf '%s' "$RAW_TT" \
            | grep -oEi 'https://www\.tiktok\.com/@andrewtvi/video/[0-9]+' \
            | head -n1 || true)"

          #### Tweet/X: combinamos varias fuentes (X, Twitter, Nitter) y buscamos varios formatos
          RAW_X="$(curl -fsSL 'https://r.jina.ai/http://x.com/iAndres_Soto' || echo '')"
          RAW_TW="$(curl -fsSL 'https://r.jina.ai/http://twitter.com/iAndres_Soto' || echo '')"
          RAW_NT="$(curl -fsSL 'https://r.jina.ai/http://nitter.net/iandres_soto' || echo '')"

          # Mezcla todo para aumentar chances
          RAW_ALL="${RAW_X}
          ${RAW_TW}
          ${RAW_NT}"

          # 1) absoluto x.com
          TWEET="$(printf '%s' "$RAW_ALL" \
            | grep -oEi 'https?://x\.com/[A-Za-z0-9_]+/status/[0-9]+' \
            | head -n1 || true)"

          # 2) absoluto twitter.com si no hubo x.com
          if [ -z "${TWEET:-}" ]; then
            TWEET="$(printf '%s' "$RAW_ALL" \
              | grep -oEi 'https?://(www\.)?twitter\.com/[A-Za-z0-9_]+/status/[0-9]+' \
              | head -n1 || true)"
          fi

          # 3) relativo /Usuario/status/ID (por si el HTML trae paths relativos)
          if [ -z "${TWEET:-}" ]; then
            REL="$(printf '%s' "$RAW_ALL" \
              | grep -oEi '/[A-Za-z0-9_]+/status/[0-9]+' \
              | head -n1 || true)"
            if [ -n "${REL:-}" ]; then
              TWEET="https://twitter.com${REL}"
            fi
          fi

          # 4) nitter absoluto (por si solo aparece ese)
          if [ -z "${TWEET:-}" ]; then
            NIT="$(printf '%s' "$RAW_ALL" \
              | grep -oEi 'https?://nitter\.net/[A-Za-z0-9_]+/status/[0-9]+' \
              | head -n1 || true)"
            if [ -n "${NIT:-}" ]; then
              TWEET="$NIT"
            fi
          fi

          # Normaliza siempre a twitter.com (Twitframe lo prefiere)
          if [ -n "${TWEET:-}" ]; then
            TWEET="$(printf '%s' "$TWEET" \
              | sed -E 's#^https?://x\.com/#https://twitter.com/#I' \
              | sed -E 's#^https?://nitter\.net/#https://twitter.com/#I')"
          fi

          echo "TIKTOK: $TIKTOK"
          echo "TWEET : $TWEET"

          # Genera JSON aunque alguno esté vacío
          TIKTOK_SAFE=${TIKTOK//\"/\\\"}
          TWEET_SAFE=${TWEET//\"/\\\"}
          printf '{ "tiktok": "%s", "tweet": "%s" }\n' "$TIKTOK_SAFE" "$TWEET_SAFE" > data/latest.json
          echo "latest.json:"; cat data/latest.json

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update latest.json"
          file_pattern: data/latest.json
